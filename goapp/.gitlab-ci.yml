stages:
  - test
  - build
  - deploy

test:
  stage: test
  image:
    name: golang:1.11.3-stretch
  script:
    - cp -r $CI_PROJECT_DIR /go/src
    - cd /go/src/$CI_PROJECT_NAME
    - go get ./...
    - go test
  only:
    - tags

build:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

chartmuseum:
  image:
    name: linkyard/docker-helm
    entrypoint: ["/bin/sh", "-c"]
  stage: build
  script:
    - helm init --client-only
    - helm lint chart/*
    - helm plugin install https://github.com/chartmuseum/helm-push
    - helm repo add chartmuseum $CHARTMUSEUM_URL
    - CHART_VERSION=$(grep ^version chart/${CI_PROJECT_NAME}/Chart.yaml|cut -d' ' -f2)
    - if [ $(helm search chartmuseum/$CI_PROJECT_NAME -v $CHART_VERSION | sed /NAME/d | sed '/No results found/d' | wc -l) -eq 0 ]; then helm push chart/$CI_PROJECT_NAME chartmuseum ; fi
  only:
    - tags

deploy:
  stage: deploy
  image: lwolf/helm-kubectl-docker:v1103_291
  before_script:
    - mkdir ~/.kube
    - echo ${K8S_CONFIG} | base64 -d > ~/.kube/config
    - helm init --client-only
    - helm repo add chartmuseum $CHARTMUSEUM_URL
    - helm repo update
  script:
    - export DEPLOYS=$(helm ls | grep $CI_PROJECT_NAME | wc -l)
    - helm fetch --untar chartmuseum/${CI_PROJECT_NAME}
    - if [ ${DEPLOYS}  -eq 0 ]; then helm install --name=${CI_PROJECT_NAME} --set image.tag=$CI_COMMIT_TAG $CI_PROJECT_NAME --namespace=${CI_PROJECT_NAME}; else helm upgrade ${CI_PROJECT_NAME} --set image.tag=$CI_COMMIT_TAG $CI_PROJECT_NAME --namespace=${CI_PROJECT_NAME}; fi
  only:
    - tags

